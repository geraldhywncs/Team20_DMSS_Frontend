name: Build and Deploy Frontend to S3

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.13.0'

      - name: Install dependencies
        run: npm install

      - name: Download Chrome and ChromeDriver
        run: |
          # Download and install Chrome
          wget -q -O chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i chrome.deb
          sudo apt-get install -f -y

          # Download the latest ChromeDriver version
          LATEST_CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget -q --show-progress https://chromedriver.storage.googleapis.com/$LATEST_CHROMEDRIVER_VERSION/chromedriver_linux64.zip

          # Unzip the downloaded file
          unzip chromedriver_linux64.zip

          # Move ChromeDriver to a directory in PATH
          sudo mv chromedriver /usr/local/bin/

          # Clean up downloaded files
          rm chromedriver_linux64.zip chrome.deb

      - name: Install selenium-side-runner
        run: npm install -g selenium-side-runner

      - name: Start frontend
        run: npm run start

      - name: Start selenium testing
        run: | 
          selenium-side-runner moneygowhere.side
        continue-on-error: true

      - name: Build frontend with ESLint warnings ignored
        if: ${{ success() }}
        run: npm run build-no-eslint

      - name: Configure AWS CLI
        if: ${{ success() }}
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ap-southeast-2

      - name: Sync build output to S3
        if: ${{ success() }}
        run: aws s3 sync build/ s3://moneygowheredmss --delete
